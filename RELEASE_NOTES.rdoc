== v0.5.6

* Removed fake_dynamo as an explicit development requirement.

== v0.5.5

* Minimum Ruby version removed from gemspec file. The requirement is still there,
  just not explicitly stated.

== v0.5.4

* Minimum Ruby version specified as '~> 2' instead of '>= 2.0.0' as the latter
  doesn't work in Ocean deployment for some fucking bloody irritating shit reason.
* The :nodoc: problem solved.

== v0.5.3

* There's something weird going on with the documentation generator at rubydoc.info.
  It doesn't seem to understand :nodoc: all. Sorry, folks, we'll give it another try,
  this time after going completely bonkers on the :nodoc:.

== v0.5.2

* Only minor doc changes. Nodoc of the ActiveRecord reference files.

== v0.5.1

* <tt>belongs_to :thingy now defines <tt>.build_thingy</tt> and <tt>.create_thingy</tt>.
* Work begun on collection proxies, etc.

== v0.5.0

* +has_many+ can now be nested in multiple layers through the use of +:composite_key+ 
  in +belongs_to+. See the documentation for +belongs_to+ for examples.

== v0.4.4

* The +dependent:+ keyword arg may now be +:destroy+, +:delete+ or +:nullify+
  with the same semantics as in ActiveRecord. With +:nullify+, however,
  the hash key is set to the string "NULL" rather than binary NULL, as
  DynamoDB doesn't permit storing empty fields.

== v0.4.3

* +has_many+ now destroys all children before destroying itself. It thus behaves like
  <tt>dependent: :destroy</tt> was declared in ActiveRecord. Soon, +has_many+ will take
  a <tt>dependent:</tt> value of <tt>:destroy</tt>, <tt>:delete</tt>, or <tt>:nullify</tt>,
  for full compatibility. 

== v0.4.2

* +belongs_to+ now handles setting and retrieving the parent association correctly in
  all cases, including direct and mass assignment (+:master+, +:master_id+, etc). 
* +has_many=+ now destroys rather than deletes.
* Got rid of the +fake_dynamo+ purge message.
* Relations now take an optional reload arg, as in <tt>parent.children(true)</tt>.

== v0.4.1

* has_many now works, in a minimalistic fashion. To implement the rest of the interface,
  we need association proxies.
* Instances of classes with one or more has_many relations now save all relations after
  the instance has been saved. To save only dirty association collections, we need
  association proxies. Collections which are nil are not saved. Collections which are []
  are saved, which means they clear all children. This difference is crucial, until we
  get association proxies.
* #reload clears all relations.

== v0.4.0

* OceanDynamo::Table replaces OceanDynamo::Base. 
* Modular structure introduced.

== v0.3.13

* Documentation updates.

== v0.3.12

* Documentation updates.

== v0.3.11

* belongs_to operational. The other side, has_many, is much simpler and should follow
  very soon. Probably today.
* .has_belongs_to? returns true if the class has a belongs_to association.
* .belongs_to_class returns the class of the belongs_to association, or false if none.
* .find can now take an array arg.
* #hash_key and #range_key readers added.

== v0.3.10

* Model.find_each implemented.
* Model.delete_all implemented.
* Model.destroy_all implemented.
* README updated.

== v0.3.9

* Model.all added. As the name suggests, it returns all items in the table.
* Model.count changed to use a table scan.

== v0.3.6, v0.3.7, v0.3.8

* README and gemspec updates.

== v0.3.5

* Camelcase bug fixed. README updated.

== v0.3.4

* First bare-bones implementation of belongs_to. There's no corresponding has_one or has_many -
  yet.
* README updates.

== v0.3.3

* The StaleObjectError exception now takes a record parameter.

== v0.3.2

* The hash key name now defaults to :id, for ActiveRecord and Rails controller compatibility.
* The .id, .id= and .id? methods now work as expected.
* assign_attributes now takes the :without_protection keyword. (No-op, compatibility only.)

== v0.3.1

* Loading issue fixed.

== v0.3.0

* Made ActiveModel and ActiveSupport dependencies.

== v0.2.8

* Turning off locking now fully complete.

== v0.2.7

* Locking can now be turned off by supplying nil as the lock column. v0.2.7 accidentally
  broke this feature. It is now operational again.

== v0.2.6

* Locking can now be disabled. 
* README and documentation changes.

== v0.2.5

* DangerousAttributeError is now raised if an attribute name already exists as a method
  in OceanDynamo.

== v0.2.4

* Added .find_by_key which is like .find except it returns nil for nonexistent records.
* Locking and timestamping can now be specified with dynamo_schema.
* Freezing added. As in ActiveRecord, freeze only freezes the attribute hash.
* Unknown attributes are now handled as in ActiveRecord.
* Operators ==, eql? and <=> implemented.

== v0.2.2

* dynamo_schema now takes :connect and :create keyword args to control AWS connection and table creation.
  :connect has the default value :late, which means the connection will be made as soon as queries against
  AWS are made. If :connect has the value true, OceanDynamo will connect at class load time. If false,
  no connection will be attempted. :create is by default false, which means that the table must already
  exist on AWS, or an exception will be raised. If set to true, the table will be created when the
  connection is made.

== v0.2.1

* Obsolete setters removed.
* README updates.

== v0.2.0

* Bumped the version number.

== v0.1.14

* +dynamo_schema+ is now available to declare and create DynamoDB tables and attributes.
* +create+ and +update+ now take validation options.

== v0.1.13

* Exception RecordInvalid shamelessly lifted from ActiveRecord.

== v0.1.12

* Validation for save and save! now works.

== v0.1.11

* Type casting attribute values at assign time.
* Added destroy!
* First versions of read_attribute and write_attribute.
* @attributes is now a normal hash, with string keys.
* Base class split up into several source files.
* Added read_attribute_for_validation. Some renames.

== v0.1.10

* Exception hierarchy mirroring ActiveRecord.
* Save rescues only RecordInvalid.
* Protected method perform_validations added, for further reorg.

== v0.1.9

* "field" is now "attribute".

== v0.1.8

* Sets of integers and floats work now. Edge case involving defaults eliminated.

== v0.1.7

* String sets serialised and deserialised correctly. More to come for the other set types. 
  Might need to introduce a :set data type in order to avoid deserialising [] as "" (which
  are, after all, equivalent).

== v0.1.6

* Initialisation improved.

== v0.1.5

* Loading and inheritance class variable issue solved.

== v0.1.4

* :string defaulting now correct. 

== v0.1.3

* #delete and #destroy no longer freeze the instance. 

== v0.1.2

* OceanDynamo#valid? now takes #new_record? into account. 
* Documentation changes.

== v0.1.1

* Documentation changes.

== v0.1.0

* Initial release via Rubygems.org.

